[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\bhanu\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\bhanu\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_231)
[debug]       Load.loadUnit: plugins took 333.1716ms
[debug]       Load.loadUnit: defsScala took 0.8415ms
[debug] [Loading] Scanning directory C:\Users\bhanu\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\bhanu\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 69.381 ms
[debug]           Load.resolveProject(global-plugins) took 168.2285ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\bhanu\.sbt\1.0\plugins, plugins: List(<none>))) took 338.6184ms
[debug] [Loading] Done in C:\Users\bhanu\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 407.1185ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5922ms
[debug]     Load.loadUnit(file:/C:/Users/bhanu/.sbt/1.0/plugins/, ...) took 765.3333ms
[debug]   Load.apply: load took 1418.2977ms
[debug]   Load.apply: resolveProjects took 17.4158ms
[debug]   Load.apply: finalTransforms took 142.1196ms
[debug]   Load.apply: config.delegates took 17.6671ms
[debug]   Load.apply: Def.make(settings)... took 11346.4637ms
[debug]   Load.apply: structureIndex took 259.6188ms
[debug]   Load.apply: mkStreams took 3.6821ms
[info] loading global plugins from C:\Users\bhanu\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 25231.4318ms
[debug]           Load.loadUnit: plugins took 90.1392ms
[debug]           Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory C:\DEV\BigData\Spark-workspace\QuantexaAssignment\project
[debug]             Load.loadUnit: mkEval took 46.9002ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\DEV\BigData\Spark-workspace\QuantexaAssignment\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.0679 ms
[info] loading settings for project quantexaassignment-build from idea.sbt ...
[debug]               Load.resolveProject(quantexaassignment-build) took 8.1242ms
[debug]             Load.loadTransitive: finalizeProject(Project(id quantexaassignment-build, base: C:\DEV\BigData\Spark-workspace\QuantexaAssignment\project, plugins: List(<none>))) took 13.1279ms
[debug] [Loading] Done in C:\DEV\BigData\Spark-workspace\QuantexaAssignment\project, returning: (quantexaassignment-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 650.7632ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.1775ms
[debug]         Load.loadUnit(file:/C:/DEV/BigData/Spark-workspace/QuantexaAssignment/project/, ...) took 752.1512ms
[debug]       Load.apply: load took 755.7565ms
[debug]       Load.apply: resolveProjects took 0.2532ms
[debug]       Load.apply: finalTransforms took 18.0089ms
[debug]       Load.apply: config.delegates took 0.6193ms
[debug]       Load.apply: Def.make(settings)... took 269.0541ms
[debug]       Load.apply: structureIndex took 58.6633ms
[debug]       Load.apply: mkStreams took 0.0036ms
[info] loading project definition from C:\DEV\BigData\Spark-workspace\QuantexaAssignment\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3663.6622ms
[debug]     Load.loadUnit: defsScala took 0.0063ms
[debug] [Loading] Scanning directory C:\DEV\BigData\Spark-workspace\QuantexaAssignment
[debug]       Load.loadUnit: mkEval took 0.7715ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\DEV\BigData\Spark-workspace\QuantexaAssignment, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 8.2189 ms
[info] loading settings for project quantexaassignment from build.sbt ...
[debug]         Load.resolveProject(quantexaassignment) took 54.761ms
[debug]       Load.loadTransitive: finalizeProject(Project(id quantexaassignment, base: C:\DEV\BigData\Spark-workspace\QuantexaAssignment, plugins: List(<none>))) took 68.331ms
[debug] [Loading] Done in C:\DEV\BigData\Spark-workspace\QuantexaAssignment, returning: (quantexaassignment)
[debug]     Load.loadUnit: loadedProjectsRaw took 331.6822ms
[debug]     Load.loadUnit: cleanEvalClasses took 60.8513ms
[debug]   Load.loadUnit(file:/C:/DEV/BigData/Spark-workspace/QuantexaAssignment/, ...) took 4057.3456ms
[debug] Load.apply: load took 4059.8227ms
[debug] Load.apply: resolveProjects took 0.1881ms
[debug] Load.apply: finalTransforms took 43.2033ms
[debug] Load.apply: config.delegates took 0.7979ms
[debug] Load.apply: Def.make(settings)... took 146.8184ms
[debug] Load.apply: structureIndex took 44.6987ms
[debug] Load.apply: mkStreams took 0.004ms
[info] set current project to QuantexaAssignment (in build file:/C:/DEV/BigData/Spark-workspace/QuantexaAssignment/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56904 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56904, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to QuantexaAssignment (in build file:/C:/DEV/BigData/Spark-workspace/QuantexaAssignment/)
[debug] > Exec(idea-shell, None, None)
