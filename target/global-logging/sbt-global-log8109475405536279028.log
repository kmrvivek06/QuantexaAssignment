[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\bhanu\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\bhanu\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_231)
[debug]       Load.loadUnit: plugins took 542.496701ms
[debug]       Load.loadUnit: defsScala took 0.6775ms
[debug] [Loading] Scanning directory C:\Users\bhanu\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\bhanu\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 85.4125 ms
[debug]           Load.resolveProject(global-plugins) took 218.783ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\bhanu\.sbt\1.0\plugins, plugins: List(<none>))) took 419.625299ms
[debug] [Loading] Done in C:\Users\bhanu\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 460.4909ms
[debug]       Load.loadUnit: cleanEvalClasses took 1.043101ms
[debug]     Load.loadUnit(file:/C:/Users/bhanu/.sbt/1.0/plugins/, ...) took 1025.0678ms
[debug]   Load.apply: load took 3090.529599ms
[debug]   Load.apply: resolveProjects took 30.1858ms
[debug]   Load.apply: finalTransforms took 375.2632ms
[debug]   Load.apply: config.delegates took 25.6627ms
[debug]   Load.apply: Def.make(settings)... took 14347.8137ms
[debug]   Load.apply: structureIndex took 370.2703ms
[debug]   Load.apply: mkStreams took 3.267499ms
[info] loading global plugins from C:\Users\bhanu\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 48331.6728ms
[debug]           Load.loadUnit: plugins took 74.945ms
[debug]           Load.loadUnit: defsScala took 0.0071ms
[debug] [Loading] Scanning directory C:\DEV\BigData\Spark-workspace\QuantexaAssignment\project
[debug]             Load.loadUnit: mkEval took 32.8242ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\DEV\BigData\Spark-workspace\QuantexaAssignment\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 8.8356 ms
[info] loading settings for project quantexaassignment-build from idea.sbt ...
[debug]               Load.resolveProject(quantexaassignment-build) took 40.046601ms
[debug]             Load.loadTransitive: finalizeProject(Project(id quantexaassignment-build, base: C:\DEV\BigData\Spark-workspace\QuantexaAssignment\project, plugins: List(<none>))) took 50.1001ms
[debug] [Loading] Done in C:\DEV\BigData\Spark-workspace\QuantexaAssignment\project, returning: (quantexaassignment-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 8295.161ms
[debug]           Load.loadUnit: cleanEvalClasses took 51.6287ms
[debug]         Load.loadUnit(file:/C:/DEV/BigData/Spark-workspace/QuantexaAssignment/project/, ...) took 8424.2831ms
[debug]       Load.apply: load took 8427.3417ms
[debug]       Load.apply: resolveProjects took 0.362501ms
[debug]       Load.apply: finalTransforms took 16.4029ms
[debug]       Load.apply: config.delegates took 0.8633ms
[debug]       Load.apply: Def.make(settings)... took 163.823901ms
[debug]       Load.apply: structureIndex took 55.1362ms
[debug]       Load.apply: mkStreams took 0.003899ms
[info] loading project definition from C:\DEV\BigData\Spark-workspace\QuantexaAssignment\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 21879.2708ms
[debug]     Load.loadUnit: defsScala took 0.0049ms
[debug] [Loading] Scanning directory C:\DEV\BigData\Spark-workspace\QuantexaAssignment
[debug]       Load.loadUnit: mkEval took 0.5309ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\DEV\BigData\Spark-workspace\QuantexaAssignment, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.200899 ms
[info] loading settings for project quantexaassignment from build.sbt ...
[debug]         Load.resolveProject(quantexaassignment) took 66.7414ms
[debug]       Load.loadTransitive: finalizeProject(Project(id quantexaassignment, base: C:\DEV\BigData\Spark-workspace\QuantexaAssignment, plugins: List(<none>))) took 77.4396ms
[debug] [Loading] Done in C:\DEV\BigData\Spark-workspace\QuantexaAssignment, returning: (quantexaassignment)
[debug]     Load.loadUnit: loadedProjectsRaw took 8316.4ms
[debug]     Load.loadUnit: cleanEvalClasses took 28.5963ms
[debug]   Load.loadUnit(file:/C:/DEV/BigData/Spark-workspace/QuantexaAssignment/, ...) took 30227.061601ms
[debug] Load.apply: load took 30233.108999ms
[debug] Load.apply: resolveProjects took 1.8032ms
[debug] Load.apply: finalTransforms took 636.4756ms
[debug] Load.apply: config.delegates took 17.983501ms
[debug] Load.apply: Def.make(settings)... took 420.8767ms
[debug] Load.apply: structureIndex took 115.8896ms
[debug] Load.apply: mkStreams took 0.005401ms
[info] set current project to QuantexaAssignment (in build file:/C:/DEV/BigData/Spark-workspace/QuantexaAssignment/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50015 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50015, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to QuantexaAssignment (in build file:/C:/DEV/BigData/Spark-workspace/QuantexaAssignment/)
[debug] > Exec(idea-shell, None, None)
[warn] In the last 9950 seconds, 13.145 (0.1%) were spent in GC. [Heap: 0.28GB free of 0.36GB, max 1.33GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.
